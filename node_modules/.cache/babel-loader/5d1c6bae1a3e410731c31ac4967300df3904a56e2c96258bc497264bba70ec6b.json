{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\todo-list\\\\01-starting-setup\\\\src\\\\Components\\\\TodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoForm = props => {\n  _s();\n  let val = props.edit ? props.edit.value : '';\n  const [input, setInput] = useState(val);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    // Focus only after the input element is rendered\n    if (inputRef.current) {\n      inputRef.current.focus();\n      setTimeout(() => inputRef.current.focus(), 100);\n    }\n  }, []);\n  const handleSubmit = e => {\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    e.preventDefault();\n    setInput('');\n  };\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form \",\n    onSubmit: handleSubmit,\n    children: [\"if (\", props.edit, \")\", /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Update your item\",\n        value: input,\n        onChange: handleChange,\n        name: \"text\",\n        className: \"todo-input edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button edit\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true), \"else \", props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Update your item\",\n        value: input,\n        onChange: handleChange,\n        name: \"text\",\n        className: \"todo-input edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button edit\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a todo\",\n        value: input,\n        onChange: handleChange,\n        name: \"text\",\n        className: \"todo-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        children: \"ADD todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 6\n  }, this);\n};\n_s(TodoForm, \"adR07zlIQViKKjiePeJYE9LZqrs=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoForm","props","_s","val","edit","value","input","setInput","inputRef","current","focus","setTimeout","handleSubmit","e","onSubmit","id","Math","floor","random","text","preventDefault","handleChange","target","className","children","type","placeholder","onChange","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/react/todo-list/01-starting-setup/src/Components/TodoForm.js"],"sourcesContent":["import React, {useState,useEffect,useRef} from 'react'\r\n\r\nconst TodoForm = (props) => {\r\n   let val=props.edit ? props.edit.value : '' ;\r\n   const [input,setInput]=useState(val);\r\n   const inputRef=useRef(null);\r\n\r\n   useEffect(() => {\r\n   // Focus only after the input element is rendered\r\n      if (inputRef.current) {\r\n       inputRef.current.focus();\r\n       setTimeout(() => inputRef.current.focus(), 100);\r\n \r\n      }\r\n   }, []);\r\n\r\n\r\n\r\n \r\n const handleSubmit = e =>{\r\n    props.onSubmit({\r\n        id:Math.floor(Math.random()*10000),\r\n        text:input\r\n    });\r\n    e.preventDefault();\r\n    setInput('');\r\n }\r\n\r\n const handleChange=e=>{\r\n\r\n    setInput(e.target.value);\r\n }\r\n\r\n  return (\r\n     <form className='todo-form ' onSubmit={handleSubmit}>\r\n     if ({props.edit}){\r\n\r\n      <>\r\n      <input \r\n          type='text' \r\n          placeholder='Update your item'\r\n          value={input} \r\n          onChange={handleChange}\r\n          name='text' \r\n          className='todo-input edit'>\r\n         \r\n       </input>\r\n       <button className='todo-button edit'>Edit</button>\r\n     </>\r\n     }\r\n     else {\r\n         \r\n\r\n     }\r\n     {props.edit ? (\r\n         <>\r\n           <input \r\n               type='text' \r\n               placeholder='Update your item'\r\n               value={input} \r\n               onChange={handleChange}\r\n               name='text' \r\n               className='todo-input edit'>\r\n              \r\n            </input>\r\n            <button className='todo-button edit'>Edit</button>\r\n          </>\r\n     ):\r\n     (\r\n      <>\r\n          <input \r\n               type='text' \r\n               placeholder='Add a todo'\r\n               value={input} \r\n               onChange={handleChange}\r\n               name='text' \r\n               className='todo-input'>\r\n               \r\n            </input>\r\n            <button className='todo-button'>ADD todo</button>\r\n      \r\n      </>\r\n      )}\r\n     \r\n     </form>\r\n\r\n    \r\n  )\r\n}\r\n\r\nexport default TodoForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}