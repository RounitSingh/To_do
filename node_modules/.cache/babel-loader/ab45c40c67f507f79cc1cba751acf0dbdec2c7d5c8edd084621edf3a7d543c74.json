{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\todo-list\\\\01-starting-setup\\\\src\\\\Components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n\n  // Load tasks from local storage when the todo is added\n  useEffect(() => {\n    const savedTodos = JSON.parse(localStorage.getItem('todos'));\n    if (savedTodos) {\n      setTodos(savedTodos);\n    }\n  }, []);\n\n  // Save todos to local storage whenever there is a change\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  // Function to add a new todo\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n    const newTodo = [todo, ...todos];\n    setTodos(newTodo);\n  };\n  const removeTodo = id => {\n    const updatedTodos = todos.filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n  const updateTodo = (todoId, newValue) => {\n    // Function to update a todo\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n  const completeTodo = id => {\n    // Function to mark a todo as complete\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          isComplete: !todo.isComplete\n        };\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"What's the Plan for today?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n        onSubmit: addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Todo, {\n        todos: todos,\n        completeTodo: completeTodo,\n        removeTodo: removeTodo,\n        updateTodo: updateTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoList, \"JPZTns5sUK6f8sNf0ff2EvpSbn0=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","TodoForm","Todo","jsxDEV","_jsxDEV","TodoList","_s","todos","setTodos","savedTodos","JSON","parse","localStorage","getItem","setItem","stringify","addTodo","todo","text","test","newTodo","removeTodo","id","updatedTodos","filter","updateTodo","todoId","newValue","prev","map","item","completeTodo","isComplete","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["E:/react/todo-list/01-starting-setup/src/Components/TodoList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = () => {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    // Load tasks from local storage when the todo is added\r\n    useEffect(() => {\r\n        const savedTodos = JSON.parse(localStorage.getItem('todos'));\r\n        if (savedTodos) {\r\n            setTodos(savedTodos);\r\n        }\r\n    }, []);\r\n\r\n    // Save todos to local storage whenever there is a change\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n\r\n    // Function to add a new todo\r\n    const addTodo = (todo) => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n        const newTodo = [todo, ...todos];\r\n        setTodos(newTodo);\r\n    };\r\n\r\n    const removeTodo = (id) => {\r\n        const updatedTodos = todos.filter((todo) => todo.id !== id);\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) => {    // Function to update a todo\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n        setTodos((prev) =>\r\n            prev.map((item) => (item.id === todoId ? newValue : item))\r\n        );\r\n    };\r\n\r\n    const completeTodo = (id) => {    // Function to mark a todo as complete\r\n        const updatedTodos = todos.map((todo) => {\r\n            if (todo.id === id) {\r\n                return { ...todo, isComplete: !todo.isComplete };\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className='layout'>\r\n                <h1>What's the Plan for today?</h1>\r\n                <TodoForm onSubmit={addTodo}></TodoForm>\r\n                <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo}></Todo>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMS,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5D,IAAIJ,UAAU,EAAE;MACZD,QAAQ,CAACC,UAAU,CAAC;IACxB;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAT,SAAS,CAAC,MAAM;IACZY,YAAY,CAACE,OAAO,CAAC,OAAO,EAAEJ,IAAI,CAACK,SAAS,CAACR,KAAK,CAAC,CAAC;EACxD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAGX;EACA,MAAMS,OAAO,GAAIC,IAAI,IAAK;IACtB,IAAI,CAACA,IAAI,CAACC,IAAI,IAAI,OAAO,CAACC,IAAI,CAACF,IAAI,CAACC,IAAI,CAAC,EAAE;MACvC;IACJ;IACA,MAAME,OAAO,GAAG,CAACH,IAAI,EAAE,GAAGV,KAAK,CAAC;IAChCC,QAAQ,CAACY,OAAO,CAAC;EACrB,CAAC;EAED,MAAMC,UAAU,GAAIC,EAAE,IAAK;IACvB,MAAMC,YAAY,GAAGhB,KAAK,CAACiB,MAAM,CAAEP,IAAI,IAAKA,IAAI,CAACK,EAAE,KAAKA,EAAE,CAAC;IAC3Dd,QAAQ,CAACe,YAAY,CAAC;EAC1B,CAAC;EAED,MAAME,UAAU,GAAGA,CAACC,MAAM,EAAEC,QAAQ,KAAK;IAAK;IAC1C,IAAI,CAACA,QAAQ,CAACT,IAAI,IAAI,OAAO,CAACC,IAAI,CAACQ,QAAQ,CAACT,IAAI,CAAC,EAAE;MAC/C;IACJ;IACAV,QAAQ,CAAEoB,IAAI,IACVA,IAAI,CAACC,GAAG,CAAEC,IAAI,IAAMA,IAAI,CAACR,EAAE,KAAKI,MAAM,GAAGC,QAAQ,GAAGG,IAAK,CAC7D,CAAC;EACL,CAAC;EAED,MAAMC,YAAY,GAAIT,EAAE,IAAK;IAAK;IAC9B,MAAMC,YAAY,GAAGhB,KAAK,CAACsB,GAAG,CAAEZ,IAAI,IAAK;MACrC,IAAIA,IAAI,CAACK,EAAE,KAAKA,EAAE,EAAE;QAChB,OAAO;UAAE,GAAGL,IAAI;UAAEe,UAAU,EAAE,CAACf,IAAI,CAACe;QAAW,CAAC;MACpD;MACA,OAAOf,IAAI;IACf,CAAC,CAAC;IACFT,QAAQ,CAACe,YAAY,CAAC;EAC1B,CAAC;EAED,oBACInB,OAAA;IAAA6B,QAAA,eACI7B,OAAA;MAAK8B,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACnB7B,OAAA;QAAA6B,QAAA,EAAI;MAA0B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnClC,OAAA,CAACH,QAAQ;QAACsC,QAAQ,EAAEvB;MAAQ;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eACxClC,OAAA,CAACF,IAAI;QAACK,KAAK,EAAEA,KAAM;QAACwB,YAAY,EAAEA,YAAa;QAACV,UAAU,EAAEA,UAAW;QAACI,UAAU,EAAEA;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAChC,EAAA,CA3DID,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AA6Dd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}