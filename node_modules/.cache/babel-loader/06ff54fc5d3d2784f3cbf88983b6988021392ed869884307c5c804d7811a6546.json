{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\todo-list\\\\01-starting-setup\\\\src\\\\Components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const addtodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n    const newTodo = [todo, ...todos];\n    setTodos(newTodo);\n  };\n  const completeTodo = id => {\n    let updateTodo = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updateTodo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What's the Plan for today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addtodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: completeTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"uu1hS44ImpqtDP84/kJI6RehsRs=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","TodoForm","jsxDEV","_jsxDEV","TodoList","_s","todos","setTodos","addtodo","todo","text","test","newTodo","completeTodo","id","updateTodo","map","isComplete","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Todo","_c","$RefreshReg$"],"sources":["E:/react/todo-list/01-starting-setup/src/Components/TodoList.js"],"sourcesContent":["import React,{useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\n\r\n\r\nconst TodoList = () => {\r\nconst [todos,setTodos] = useState([])\r\nconst addtodo = todo =>{\r\n    if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n        return ;\r\n    }\r\n\r\n    const newTodo = [todo,...todos]\r\n    setTodos(newTodo);\r\n   \r\n}\r\n\r\nconst completeTodo = id => {\r\n    let updateTodo = todos.map(todo => {\r\n        if (todo.id === id) {\r\n            todo.isComplete=!todo.isComplete;\r\n        }\r\n        return todo;\r\n\r\n    });\r\n    setTodos(updateTodo)\r\n}\r\n \r\n  return (\r\n    <div>\r\n      <h1>What's the Plan for today?</h1>\r\n      <TodoForm onSubmit={addtodo}></TodoForm>\r\n      <Todo todos={todos} completeTodo={completeTodo}></Todo>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAOC,QAAQ,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGjC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAMQ,OAAO,GAAGC,IAAI,IAAG;IACnB,IAAG,CAACA,IAAI,CAACC,IAAI,IAAI,OAAO,CAACC,IAAI,CAACF,IAAI,CAACC,IAAI,CAAC,EAAE;MACtC;IACJ;IAEA,MAAME,OAAO,GAAG,CAACH,IAAI,EAAC,GAAGH,KAAK,CAAC;IAC/BC,QAAQ,CAACK,OAAO,CAAC;EAErB,CAAC;EAED,MAAMC,YAAY,GAAGC,EAAE,IAAI;IACvB,IAAIC,UAAU,GAAGT,KAAK,CAACU,GAAG,CAACP,IAAI,IAAI;MAC/B,IAAIA,IAAI,CAACK,EAAE,KAAKA,EAAE,EAAE;QAChBL,IAAI,CAACQ,UAAU,GAAC,CAACR,IAAI,CAACQ,UAAU;MACpC;MACA,OAAOR,IAAI;IAEf,CAAC,CAAC;IACFF,QAAQ,CAACQ,UAAU,CAAC;EACxB,CAAC;EAEC,oBACEZ,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCnB,OAAA,CAACF,QAAQ;MAACsB,QAAQ,EAAEf;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eACxCnB,OAAA,CAACqB,IAAI;MAAClB,KAAK,EAAEA,KAAM;MAACO,YAAY,EAAEA;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV,CAAC;AAAAjB,EAAA,CA9BKD,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAgCd,eAAeA,QAAQ;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}