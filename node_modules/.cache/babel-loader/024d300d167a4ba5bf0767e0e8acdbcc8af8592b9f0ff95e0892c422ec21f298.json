{"ast":null,"code":"// import React,{useState} from 'react'\n// import TodoForm from './TodoForm'\n// import Todo from './Todo';\n\n// const TodoList = () => {\n// const [todos,setTodos] = useState([])\n// const addtodo = todo =>{\n//     if(!todo.text || /^\\s*$/.test(todo.text)) {\n//         return ;\n//     }\n\n//     const newTodo = [todo,...todos]\n//     setTodos(newTodo);\n\n// }\n// const removeTodo = (id) => {\n//   const prevTodods = [...todos].filter((todo)=>todo.id!==id);\n//   setTodos(prevTodods);\n// }\n\n// const updateTodo=(todoId,newValue)=>{\n//   if(!newValue.text || /^\\s*$/.test(newValue.text)) {\n//     return ;\n// }\n// setTodos(prev=>prev.map(item => (item.id === todoId ? newValue : item)));\n// }\n\n// const completeTodo = id => {\n//     let newTodo = todos.map(todo => {\n//         if (todo.id === id) {\n//             todo.isComplete=!todo.isComplete;\n//         }\n//         return todo;\n\n//       });\n//     setTodos(newTodo);\n// }\n\n//   return (\n//     <div>\n//       <div className='layout'>\n//         <h1>What's the Plan for today?</h1>\n//         <TodoForm onSubmit={addtodo}></TodoForm>\n//         <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo} ></Todo>\n//       </div>\n\n//     </div>\n//   )\n// }\n\n// export default TodoList","map":{"version":3,"names":[],"sources":["E:/react/todo-list/01-starting-setup/src/Components/TodoList.js"],"sourcesContent":["// import React,{useState} from 'react'\r\n// import TodoForm from './TodoForm'\r\n// import Todo from './Todo';\r\n\r\n\r\n\r\n// const TodoList = () => {\r\n// const [todos,setTodos] = useState([])\r\n// const addtodo = todo =>{\r\n//     if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n//         return ;\r\n//     }\r\n\r\n//     const newTodo = [todo,...todos]\r\n//     setTodos(newTodo);\r\n   \r\n// }\r\n// const removeTodo = (id) => {\r\n//   const prevTodods = [...todos].filter((todo)=>todo.id!==id);\r\n//   setTodos(prevTodods);\r\n// }\r\n\r\n// const updateTodo=(todoId,newValue)=>{\r\n//   if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n//     return ;\r\n// }\r\n// setTodos(prev=>prev.map(item => (item.id === todoId ? newValue : item)));\r\n// }\r\n\r\n\r\n// const completeTodo = id => {\r\n//     let newTodo = todos.map(todo => {\r\n//         if (todo.id === id) {\r\n//             todo.isComplete=!todo.isComplete;\r\n//         }\r\n//         return todo;\r\n\r\n//       });\r\n//     setTodos(newTodo);\r\n// }\r\n \r\n//   return (\r\n//     <div>\r\n//       <div className='layout'>\r\n//         <h1>What's the Plan for today?</h1>\r\n//         <TodoForm onSubmit={addtodo}></TodoForm>\r\n//         <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo} ></Todo>\r\n//       </div>\r\n      \r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default TodoList"],"mappings":"AAAA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}