{"ast":null,"code":"// import React,{useState} from 'react'\n// import TodoForm from './TodoForm'\n// import TodoList from './TodoList'\n// import {RiCloseCircleLine} from 'react-icons/ri'\n// import {TiEdit} from 'react-icons/ti'\n\n// const Todo = ({todos,completeTodo,removeTodo,updateTodo}) => {\n\n//     const [edit,setEdit]=useState({\n//         id: null,\n//         value: ''\n//     })\n// // const handleEdit=(id)=> {\n// //   setEdit({id: todo.id , value: todo.text});\n// // }\n\n// const handleEdit = (id) => {\n//   // Access the specific todo object using its id from the todos array\n//   const todoToEdit = todos.find((todo) => todo.id === id);\n//   setEdit({ id, value: todoToEdit.text });\n// };\n\n// const submitUpdate=(value)=> {\n//   updateTodo(edit.id,value);\n//   setEdit({id: null , value:''});\n// }\n\n// if(edit.id) {\n//   return <TodoForm edit={edit} onSubmit={submitUpdate}></TodoForm>\n// }\n\n//   return todos.map((todo,index)=>(\n//     <div className={todo.isComplete ? 'todo-row complete': 'todo-row' }\n//          key={index} >\n//          <div key={todo.id} onClick={()=> completeTodo(todo.id)}>\n//          {todo.text}\n//          </div>\n//          <div className='icons'>\n//            <RiCloseCircleLine className='delete-icon' onClick={()=>removeTodo(todo.id)}/>\n//            <TiEdit  className='udate-icon' onClick={()=> handleEdit(todo.id)}/>\n//          </div>\n//     </div>\n//   ));\n\n// }\n\n// export default Todo","map":{"version":3,"names":[],"sources":["E:/react/todo-list/01-starting-setup/src/Components/Todo.js"],"sourcesContent":["// import React,{useState} from 'react'\r\n// import TodoForm from './TodoForm'\r\n// import TodoList from './TodoList'\r\n// import {RiCloseCircleLine} from 'react-icons/ri'\r\n// import {TiEdit} from 'react-icons/ti'\r\n\r\n// const Todo = ({todos,completeTodo,removeTodo,updateTodo}) => {\r\n\r\n//     const [edit,setEdit]=useState({\r\n//         id: null,\r\n//         value: ''\r\n//     })\r\n// // const handleEdit=(id)=> {\r\n// //   setEdit({id: todo.id , value: todo.text});\r\n// // }\r\n\r\n// const handleEdit = (id) => {\r\n//   // Access the specific todo object using its id from the todos array\r\n//   const todoToEdit = todos.find((todo) => todo.id === id);\r\n//   setEdit({ id, value: todoToEdit.text });\r\n// };\r\n\r\n\r\n// const submitUpdate=(value)=> {\r\n//   updateTodo(edit.id,value);\r\n//   setEdit({id: null , value:''});\r\n// }\r\n\r\n// if(edit.id) {\r\n//   return <TodoForm edit={edit} onSubmit={submitUpdate}></TodoForm>\r\n// }\r\n\r\n\r\n\r\n//   return todos.map((todo,index)=>(\r\n//     <div className={todo.isComplete ? 'todo-row complete': 'todo-row' }\r\n//          key={index} >\r\n//          <div key={todo.id} onClick={()=> completeTodo(todo.id)}>\r\n//          {todo.text}\r\n//          </div>\r\n//          <div className='icons'>\r\n//            <RiCloseCircleLine className='delete-icon' onClick={()=>removeTodo(todo.id)}/>\r\n//            <TiEdit  className='udate-icon' onClick={()=> handleEdit(todo.id)}/>\r\n//          </div>\r\n//     </div>\r\n//   ));\r\n  \r\n// }\r\n\r\n// export default Todo"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}